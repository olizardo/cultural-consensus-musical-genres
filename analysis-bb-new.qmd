---
title: "CA of Music Genre Stereotypes"
author: "Omar Lizardo"
date: "`r Sys.Date()`"
execute: 
  eval: true
  echo: true
  output: true
  warning: false
  message: false
---

```{r setup, include=FALSE}
   library(backbone)
   library(conflicted)
   library(dplyr)
   library(FactoMineR)
   library(factoextra)
   library(ggplot2)
   library(ggrepel)
   library(corrplot)
   library(ggridges)
   library(haven)
   library(here)
   library(paletteer)
   library(stringr)
   cols <- paletteer_dynamic("cartography::multi.pal", 20)
   conflicts_prefer(dplyr::filter)
   conflicts_prefer(dplyr::select)
   source(here("make.fuzz.plot.R"))
```

```{r import data and select genre stereotype variables}
   #importing data
   dat <- read_dta("C:/Users/Omar Lizardo/Google Drive/MISC DATA SOURCES/SSI-2012/SSI2012.dta")
   #replacing ids with character names
   dat <- bind_cols(tibble(id_char = paste("id", sapply(dat[, 1], as.character), sep = "_")), dat) %>% 
   select(id_char, classicalfemale:hvymtluc, -ends_with("none")) %>%  #selecting relevant columns
   na.omit() #removing missing values
      r <- c("Classical", "Opera", "Jazz", "Broadway", "Easy", "Big_Band", "Classic_Rock", "Country", "Bluegrass", "Folk", "Gospel", "Latin", "Rap", "Blues", "Reggae", "Pop", "Contemp_Rock", "Alt_Rock", "Dance", "Metal")
       c <- c("Female", "Male", "White", "Black", "Hispanic", "Asian", "College", "No_College", "Young", "Mid_Age", "Old", "Lower_Class", "Working_Class", "Middle_Class", "Upper_Class")
```

```{r Summary Table of Averaged Perceptions}
   tab <- colSums(dat[,2:301])/nrow(dat)
   tab <- matrix(tab, nrow = 20,  byrow = TRUE)
   colnames(tab) <- c
   rownames(tab) <- r
   png(file = here("Plots", "main.png"), width=1000, height=700)
   corrplot(tab, is.corr = FALSE, method = "color", 
      tl.col = "black", tl.cex = 1, tl.srt = 45,
      addCoef.col = "black", cl.pos = "n", cl.lim = c(0, max(tab)),
      number.cex = 1, number.digits = 2, addgrid.col = "darkgray",
      col=colorRampPalette(c("lightblue","orange","red"))(200))
   dev.off()
```


```{r Creating individual matrices}
   make.mat <- function(x) {
      x <- matrix(as.numeric(x), 20, 15, byrow = TRUE)
      return(x)
      }
   bb.sdsm <- function(x) {
     tryCatch({
         w <- sdsm(x, alpha = 0.25, narrative = FALSE)
         return(w)
            }, error = function(e) {return(NULL)})
      }
   den <- rowSums(dat[,2:301])/300
   bad.den <- which(den > .9 | den < 0.1)
   dat2 <- dat[-c(bad.den), 2:301]
   ind.list <- split(dat2, seq(nrow(dat2))) # splitting each row of data frame into list objects
   ind.mat <- lapply(ind.list, make.mat) # creating individual two mode network of genre by labels
   ind.mat <- lapply(ind.mat, function(x) {rownames(x) <- r; x}) # naming individual rows
   ind.mat <- lapply(ind.mat, function(x) {colnames(x) <- c; x}) # naming individual columns
   names(ind.mat) <- dat$id_char[-c(bad.den)]
   ind.mat.t <- lapply(ind.mat, function(x) {t(x)})
   row.bb <- lapply(ind.mat, bb.sdsm)
   col.bb <- lapply(ind.mat.t, bb.sdsm)
   null.rows <- which(as.numeric(unlist(lapply(row.bb, is.null))) == 1)
   null.cols <- which(as.numeric(unlist(lapply(col.bb, is.null))) == 1)
   row.bb <- row.bb[-null.rows]
   col.bb <- col.bb[-null.cols]
   row.stack <- matrix(unlist(row.bb), ncol = 20, byrow = TRUE) # genre stacked matrix
   col.stack <- matrix(unlist(col.bb), ncol = 15, byrow = TRUE) # label stacked matrix
   colnames(row.stack) <- r # naming genre stacked matrix columns
   colnames(col.stack) <- c # naming label stacked matrix columns
   m <- nrow(row.stack)/20
   rownames(row.stack) <- rep(r, m) # naming genre stacked matrix rows
   rownames(col.stack) <- rep(c, m) # naming label stacked matrix rows
   zero.rows.r <- which(rowSums(row.stack) == 0) # which genre stacked matrix rows sum to zero?
   zero.rows.c <- which(rowSums(col.stack) == 0) # which label stacked matrix rows sum to zero?
```

```{r Stacked CA}
   #genres
   row.stack.d <- data.frame(row.stack)
   row.stack.d$genre <- rep(r, m)
   row.stack.d$id <- rep(names(row.bb), each = 20)
   CA.r <- CA(row.stack.d, graph = FALSE, row.sup = zero.rows.r, quali.sup = c(21, 22))
   #labels
   col.stack.d <- data.frame(col.stack)
   col.stack.d$label <- rep(c, m)
   col.stack.d$id <- rep(names(col.bb), each = 15)
   CA.c <- CA(col.stack.d, graph = FALSE, row.sup = zero.rows.c, quali.sup = c(16, 17))
```

```{r CA Statistics}
   stuff <- theme(axis.text = element_text(size = 18),
                  axis.title = element_text(size = 22))
   png(file = here("Plots", "scree-genres.png"), width=500, height=600)
   fviz_eig(CA.r, ncp = 6) + stuff + ggtitle("") + ylim(0, 12) + 
      labs(y = "Explained Var. %")
   dev.off()
   png(file = here("Plots", "scree-labels.png"), width=500, height=600)
   fviz_eig(CA.c, ncp = 6) + stuff + ggtitle("") + ylim(0, 12) + 
      labs(y = "Explained Var. %")
   dev.off()
```

```{r Plot Data}
     make.plot.dat <- function(x) { 
         w <-  data.frame(x) %>% 
         mutate(col.obj = gsub("\\..*","",rownames(x))) 
         rownames(w) <- 1:nrow(x)
         return(w)
         }
      #genre column scores data frame
      col.gen.dat <-  data.frame(CA.r$col$coord) %>% 
         mutate(col.obj = rownames(CA.r$col$coord)) 
      #label column scores data frame
      col.lab.dat <-  data.frame(CA.c$col$coord) %>% 
         mutate(col.obj = rownames(CA.c$col$coord)) 
      #supplementary scores data frame for genres
      sup.gen.dat <- CA.r$quali.sup$coord[1:20, ] 
      sup.gen.dat <- data.frame(sup.gen.dat, 
                                col.obj = gsub("genre.", "", rownames(sup.gen.dat)))
      rownames(sup.gen.dat) <- 1:nrow(sup.gen.dat)
      #supplementary scores data frame for labels
      sup.lab.dat <- CA.c$quali.sup$coord[1:15, ] 
      sup.lab.dat <- data.frame(sup.lab.dat, 
                                col.obj = gsub("label.", "", rownames(sup.lab.dat)))
      rownames(sup.lab.dat) <- 1:nrow(sup.lab.dat)
      #genre row scores
      row.gen.dat <- make.plot.dat(CA.r$row$coord) 
      #label row scores
      row.lab.dat <- make.plot.dat(CA.c$row$coord) 
      #supplementary individual scores for genres
      ind.gen.sup <- CA.r$quali.sup$coord %>% 
         data.frame() %>% 
         slice(21:nrow(CA.r$quali.sup$coord)) %>% 
         mutate(id_char = str_sub(rownames(CA.r$quali.sup$coord[21:nrow(CA.r$quali.sup$coord), ]), 4, -1))
      row.names(ind.gen.sup) <- 1:nrow(ind.gen.sup)
      #supplementary individual scores for labels
      ind.lab.sup <- CA.c$quali.sup$coord %>% 
         data.frame() %>% 
         slice(16:nrow(CA.c$quali.sup$coord)) %>% 
         mutate(id_char = str_sub(rownames(CA.c$quali.sup$coord[16:nrow(CA.c$quali.sup$coord), ]), 4, -1))
      row.names(ind.lab.sup) <- 1:nrow(ind.lab.sup)
```


```{r Data Examples}
   make.aff.plot <- function(x) {
      p <- corrplot(x, is.corr = FALSE, method = "color", 
         tl.col = "black", tl.cex = 1, tl.srt = 45,
         addCoef.col = "black", cl.pos = "n",
         number.cex = 1.75, number.digits = 0, addgrid.col = "darkgray",
         col=colorRampPalette(c("white","white","red"))(200))
      return(p)
      }
   make.proj.plot <- function(x) {
     p <- corrplot(x, is.corr = FALSE, method = "color", 
         tl.col = "black", tl.cex = 1, tl.srt = 45,
         addCoef.col = "black", cl.pos = "n", cl.lim = c(0, max(x)),
         number.cex = 1.5, number.digits = 0, addgrid.col = "darkgray",
         col=colorRampPalette(c("lightblue","pink","red"))(200))
         return(p)
         }
   k = 1
   for (id in c("id_65", "id_236", "id_1114", "id_2002")) {
      plot.name <- paste(paste("data-ex-af", k, sep = ""), ".png", sep = "")
      png(file = here("Plots", plot.name), width=800, height=700)
      make.aff.plot(ind.mat[[id]])
      dev.off()
      plot.name <- paste(paste("data-ex-rp", k, sep = ""), ".png", sep = "")
      png(file = here("Plots", plot.name), width=800, height=700)
      make.proj.plot(ind.row[[id]])
      dev.off()
      plot.name <- paste(paste("data-ex-cp", k, sep = ""), ".png", sep = "")
      png(file = here("Plots", plot.name), width=800, height=700)
      make.proj.plot(ind.col[[id]])
      dev.off()
      plot.name <- paste(paste("data-ex-rbb", k, sep = ""), ".png", sep = "")
      png(file = here("Plots", plot.name), width=800, height=700)
      make.aff.plot(row.bb[[id]])
      dev.off()
      plot.name <- paste(paste("data-ex-cbb", k, sep = ""), ".png", sep = "")
      png(file = here("Plots", plot.name), width=800, height=700)
      make.aff.plot(col.bb[[id]])
      dev.off()
      k <- k + 1
      }
   a <- rbind(row.bb[["id_65"]], row.bb[["id_236"]])
   b <- rbind(col.bb[["id_65"]], col.bb[["id_236"]])
   png(file = here("Plots", "data-ex-stack1.png"), width=800, height=1000)
   make.aff.plot(a)
   dev.off()
   png(file = here("Plots", "data-ex-stack2.png"), width=800, height=1000)
   make.aff.plot(b)
   dev.off()
```

```{r Column Score Similarity Plots}
   make.col.plot <- function(x, d1, d2)  {
      p <- fviz_ca_col(x, axes = c(d1, d2),  
                        col.col = "contrib", labelsize = 6,
                        gradient.cols = c("#C555CBFF", "#722E41FF", "#502E71FF"),
                        repel = TRUE)
      p <- p + theme(legend.position = "bottom",
                     axis.text = element_text(size = 18),
                     axis.title = element_text(size = 22),
                     legend.title = element_blank())
      p <- p + ggtitle("")
      return(p)
   }
   h <- 625
   w <- 750
   #genres
   png(file = here("Plots", "ca-genre-col12.png"), width=w, height=h)
   make.col.plot(CA.r, 1, 2)
   dev.off()
   png(file = here("Plots", "ca-genre-col13.png"), width=w, height=h)
   make.col.plot(CA.r, 1, 3)
   dev.off()
   png(file = here("Plots", "ca-label-col12.png"), width=w, height=h)
   make.col.plot(CA.c, 1, 2)
   dev.off()
   png(file = here("Plots", "ca-label-col13.png"), width=w, height=h)
   make.col.plot(CA.c, 1, 3)
   dev.off()
```

```{r Genre Cloud Plots}
   source(here("make.fuzz.plot.R"))
   h <- 625
   w <- 750
   png(file = here("Plots", "genre-proto-ex1.png"), width=w, height=h)
      make.fuzz.plot(row.gen.dat, col.gen.dat, sup.gen.dat, 
                     seed = 125, ls = 5,
                     1, 2, pa = .35,  t = 3, b = 3, l = 2, r = 3,
                     c("Rap", "Folk", "Classical"))
   dev.off()
   png(file = here("Plots", "genre-proto-ex2.png"), width=w, height=h)
      make.fuzz.plot(row.gen.dat, col.gen.dat, sup.gen.dat,
                     seed = 125, ls = 5,
                     1, 2, pa = .35,  t = 2, b = 2, l = 2, r = 3,
                     c("Alt_Rock", "Gospel", "Opera"))
   dev.off()
   png(file = here("Plots", "genre-proto-ex3.png"), width=w, height=h)
      make.fuzz.plot(row.gen.dat, col.gen.dat, sup.gen.dat,
                     seed = 125, ls = 5,
                     1, 2, pa = .35,  t = 2, b = 2, l = 2, r = 3, bns = 5,
                     c("Metal", "Bluegrass", "Broadway"))
   dev.off()
   png(file = here("Plots", "genre-proto-ex4.png"), width=w, height=h)
      make.fuzz.plot(row.gen.dat, col.gen.dat, sup.gen.dat,
                     seed = 125, ls = 5,
                     1, 2, pa = .35,  t = 2, b = 2, l = 2, r = 3, bns = 4,
                     c("Jazz", "Reggae", "Blues", "Rap", "Classical"))
   dev.off()
   png(file = here("Plots", "genre-proto-ex5.png"), width=w, height=h)
      make.fuzz.plot(row.gen.dat, col.gen.dat, sup.gen.dat,
                     seed = 125, ls = 5,
                     1, 2, pa = .35,  t = 2, b = 2, l = 2, r = 3, bns = 4,
                     c("Country", "Bluegrass", "Classic_Rock", "Folk"))
   dev.off()
   png(file = here("Plots", "genre-proto-ex6.png"), width=w, height=h)
      make.fuzz.plot(row.gen.dat, col.gen.dat, sup.gen.dat,
                     seed = 125, ls = 5,
                     1, 2, pa = .35,  t = 2, b = 2, l = 2, r = 3, bns = 4,
                     c("Alt_Rock", "Contemp_Rock", "Classic_Rock", "Metal"))
   dev.off()
   png(file = here("Plots", "genre-proto-ex7.png"), width=w, height=h)
      make.fuzz.plot(row.gen.dat, col.gen.dat, sup.gen.dat,
                     seed = 125, ls = 5,
                     1, 2, pa = .35,  t = 2, b = 2, l = 2, r = 3, bns = 4,
                     c("Broadway", "Classical", "Opera", "Easy", "Jazz"))
   dev.off()
```
  
```{r Label Cloud Plots}
   source(here("make.fuzz.plot.R"))
   h <- 625
   w <- 750
   png(file = here("Plots", "label-proto-ex1.png"), width=w, height=h)
      make.fuzz.plot(row.lab.dat, col.lab.dat, sup.lab.dat, bns = 6, ls = 6,
                     1, 2, pa = .35,  t = 2, b = 2, l = 2, r = 2,
                     c("White", "Asian", "Black", "Hispanic"))
   dev.off()
   png(file = here("Plots", "label-proto-ex2.png"), width=w, height=h)
      make.fuzz.plot(row.lab.dat, col.lab.dat, sup.lab.dat, bns = 6, ls = 6,
                     1, 2, pa = .35,  t = 2, b = 2, l = 2, r = 2,
                     c("Old", "Mid_Age", "Young"))
   dev.off()
   png(file = here("Plots", "label-proto-ex3.png"), width=w, height=h)
      make.fuzz.plot(row.lab.dat, col.lab.dat, sup.lab.dat, bns = 6, ls = 6,
                     1, 2, pa = .35,  t = 2, b = 2, l = 2, r = 2,
                     c("Upper_Class", "Lower_Class", "Working_Class", "Middle_Class"))
   dev.off()
   png(file = here("Plots", "label-proto-ex4.png"), width=w, height=h)
      make.fuzz.plot(row.lab.dat, col.lab.dat, sup.lab.dat, bns = 6, ls = 6,
                     1, 2, pa = .35,  t = 2, b = 2, l = 2, r = 2,
                     c("College", "No_College"))
   dev.off()
   
   png(file = here("Plots", "label-proto-ex5.png"), width=w, height=h)
      make.fuzz.plot(row.lab.dat, col.lab.dat, sup.lab.dat, bns = 6, ls = 6,
                     1, 2, pa = .35,  t = 2, b = 2, l = 2, r = 2,
                     c("Male", "Female"))
   dev.off()
```

```{r Genre Ridge Plots}
   make.ridge.dat <- function(x, w) {
      x <- rename(x, Prot.1 = Dim.1, Prot.2 = Dim.2, Prot.3 = Dim.3, Prot.4 = Dim.4, Prot.5 = Dim.5) 
      x <- left_join(w, x) 
      return(x)
      }
   make.ridge.plot <- function(x, d1, d2, lim = 1) {
      p <- ggplot(data = x, aes(x = x[, d1], 
                                y = reorder(col.obj, x[, d2]),
                                group = col.obj, fill = col.obj, color = col.obj))
      p <- p + geom_density_ridges(alpha = .2, point_alpha = .2, jittered_points = TRUE)
      p <- p + guides(fill = "none", color = "none")
      p <- p + geom_vline(xintercept = 0, color = "black", linewidth = 1.25)
      p <- p + scale_color_manual(values = cols)
      p <- p + theme_ridges()
      p <- p + theme(axis.text = element_text(size = 22), 
                     axis.title = element_text(size = 22))
      p <- p + labs(x = "", y = "")
      return(p)
      }
   w <- 1000
   h <- 1000
   # genres
   ridge.dat.g <- make.ridge.dat(col.gen.dat, row.gen.dat)
   png(file = here("Plots", "genre-ridge-dim1.png"), width=w, height=h)     
   make.ridge.plot(ridge.dat.g, 1, 7)
   dev.off()
   png(file = here("Plots", "genre-ridge-dim2.png"), width=w, height=h)
   make.ridge.plot(ridge.dat.g, 2, 8)
   dev.off()
   png(file = here("Plots", "genre-ridge-dim3.png"), width=w, height=h)
   make.ridge.plot(ridge.dat.g, 3, 9)
   dev.off()
   #labels
   ridge.dat.l <- make.ridge.dat(col.lab.dat, row.lab.dat)
   png(file = here("Plots", "label-ridge-dim1.png"), width=w, height=h)
   make.ridge.plot(ridge.dat.l, 1, 7)
   dev.off()
   png(file = here("Plots", "label-ridge-dim2.png"), width=w, height=h)
   make.ridge.plot(ridge.dat.l, 2, 8)
   dev.off()
   png(file = here("Plots", "label-ridge-dim3.png"), width=w, height=h)
   make.ridge.plot(ridge.dat.l, 3, 9)
   dev.off()
```

```{r Genre and Label Subcloud Variance}
   w <- 800
   h <- 800
   make.var.dat <- function(x, w) {
      z <- make.ridge.dat(x, w) %>% 
      mutate(dist.cent.1 = (Dim.1 - Prot.1)^2) %>% 
      mutate(dist.cent.2 = (Dim.2 - Prot.2)^2) %>% 
      mutate(dist.cent.3 = (Dim.3 - Prot.3)^2) %>% 
      mutate(var = dist.cent.1 + dist.cent.2 + dist.cent.3) %>% 
      mutate(std = sqrt(var)) %>% 
      select(c("var", "std", "col.obj")) %>% 
      group_by(col.obj) %>% 
      summarize(across(c(var), mean))
      return(z)
      }
   make.var.plot <- function(w, ps = 8, seed = 125) {
      p <- ggplot(data = w, aes(y = reorder(col.obj, var), 
                                x = var, color = col.obj, group = col.obj))
      p <- p + geom_point(stat = "identity", size = 8)
      p <- p + scale_color_manual(values = cols)
      p <- p + guides(color = "none")
      p <- p + theme_ridges() + labs(y = "", x = "")
      p <- p + theme(axis.text = element_text(size = 20))
      set.seed(seed)
      colors <- sample(cols, length(unique(w$col.obj)))
      p <- p + scale_color_manual(values = colors)
      p <- p + scale_fill_manual(values = colors)
      p
   }   
   make.var.plot.demog <- function(w, ps = 8, seed = 125) {
      p <- ggplot(data = w, aes(y = col.obj, 
                                x = var, color = col.obj, group = col.obj))
      p <- p + geom_point(stat = "identity", size = 8)
      p <- p + scale_color_manual(values = cols)
      p <- p + guides(color = "none")
      p <- p + theme_ridges() + labs(y = "", x = "")
      p <- p + theme(axis.text = element_text(size = 20))
      set.seed(seed)
      colors <- sample(cols, length(unique(w$col.obj)))
      p <- p + scale_color_manual(values = colors)
      p <- p + scale_fill_manual(values = colors)
      p
      } 
   var.g <- make.var.dat(sup.gen.dat, row.gen.dat) 
   var.l <- make.var.dat(sup.lab.dat, row.lab.dat) 
   png(file = here("Plots", "genre-var.png"), width=w, height=h)
   make.var.plot(var.g, ps = 10) + xlim(0.75, 1.75)
   dev.off()
   png(file = here("Plots", "label-var.png"), width=w, height=h)
   make.var.plot(var.l, ps = 10) + xlim(0.75, 1.75)
   dev.off()
```

```{r skew and kurtosis data}
   library(moments)
   dat <- c()
   for (g in sup.gen.dat$col.obj) {
      d <- filter(row.gen.dat, col.obj == g) %>% 
         select(Dim.1) 
      s <- round(skewness(d), 4)
      k <- round(kurtosis(d), 4)
      b <- round((s^2+1)/k, 4)
      dat <- rbind(dat, c(s, k, b))
      }
   dat.g1 <- data.frame(sup.gen.dat$col.obj, dat) %>% 
      rename(col.obj = sup.gen.dat.col.obj, skew = Dim.1, kurt = Dim.1.1, bm = Dim.1.2) %>% 
      mutate(kurt = kurt - 3)
   dat <- c()
   for (g in sup.gen.dat$col.obj) {
      d <- filter(row.gen.dat, col.obj == g) %>% 
         select(Dim.2) 
      s <- round(skewness(d), 4)
      k <- round(kurtosis(d), 4)
      b <- round((s^2+1)/k, 4)
      dat <- rbind(dat, c(s, k, b))
      }
   dat.g2 <- data.frame(sup.gen.dat$col.obj, dat) %>% 
      rename(col.obj = sup.gen.dat.col.obj, skew = Dim.2, kurt = Dim.2.1, bm = Dim.2.2) %>% 
      mutate(kurt = kurt - 3)
   dat <- c()
   for (l in sup.lab.dat$col.obj) {
      d <- filter(row.lab.dat, col.obj == l) %>% 
         select(Dim.1) 
      s <- round(skewness(d), 4)
      k <- round(kurtosis(d), 4)
      b <- round((s^2+1)/k, 4)
      dat <- rbind(dat, c(s, k, b))
      }
   dat.l1 <- data.frame(sup.lab.dat$col.obj, dat) %>% 
      rename(col.obj = sup.lab.dat.col.obj, skew = Dim.1, kurt = Dim.1.1, bm = Dim.1.2) %>% 
      mutate(kurt = kurt - 3)
   dat <- c()
   for (l in sup.lab.dat$col.obj) {
      d <- filter(row.lab.dat, col.obj == l) %>% 
         select(Dim.2) 
      s <- round(skewness(d), 4)
      k <- round(kurtosis(d), 4)
      b <- round((s^2+1)/k, 4)
      dat <- rbind(dat, c(s, k, b))
      }
   dat.l2 <- data.frame(sup.lab.dat$col.obj, dat) %>% 
      rename(col.obj = sup.lab.dat.col.obj, skew = Dim.2, kurt = Dim.2.1, bm = Dim.2.2) %>% 
      mutate(kurt = kurt - 3)
```

```{r skew and kurtosis plots}
   #gennres
   png(file = here("Plots", "genre-skew1.png"), width=w, height=h)
   d <- dat.g1 %>% 
      rename(var = skew)
   make.var.plot(d) 
   dev.off()
   png(file = here("Plots", "genre-skew2.png"), width=w, height=h)
   d <- dat.g2 %>% 
      rename(var = skew)
   make.var.plot(d) 
   dev.off()
   png(file = here("Plots", "genre-kurt1.png"), width=w, height=h)
   d <- dat.g1 %>% 
      rename(var = kurt)
   make.var.plot(d)    
   dev.off()
   png(file = here("Plots", "genre-kurt2.png"), width=w, height=h)
   d <- dat.g2 %>% 
      rename(var = kurt)
   make.var.plot(d) 
   dev.off()
   #labels
   png(file = here("Plots", "label-skew1.png"), width=w, height=h)
   d <- dat.l1 %>% 
      rename(var = skew)
   make.var.plot(d) 
   dev.off()
   png(file = here("Plots", "label-skew2.png"), width=w, height=h)
   d <- dat.l2 %>% 
      rename(var = skew)
   make.var.plot(d) 
   dev.off()
   png(file = here("Plots", "label-kurt1.png"), width=w, height=h)
   d <- dat.l1 %>% 
      rename(var = kurt)
   make.var.plot(d)    
   dev.off()
   png(file = here("Plots", "label-kurt2.png"), width=w, height=h)
   d <- dat.l2 %>% 
      rename(var = kurt)
   make.var.plot(d) 
   dev.off()
```

```{r Comparing Individual Matrices Based on Typicality}
   library(stringr)
   w <- 800
   h <- 700
   make.var.row.dat  <- function(x, w) {
      z <- make.ridge.dat(x, w) %>% 
      mutate(dist.cent.1 = (Dim.1 - Prot.1)^2) %>% 
      mutate(dist.cent.2 = (Dim.2 - Prot.2)^2) %>% 
      mutate(dist.cent.3 = (Dim.3 - Prot.3)^2) %>% 
      mutate(var = dist.cent.1 + dist.cent.2 + dist.cent.3) %>% 
      mutate(std = sqrt(var))
      return(z)
      }
   
   ex.ind.dat <- function(x, w, z, q, p, id) {
      a <- make.var.row.dat(x, w) %>% 
      mutate(id_char = q$id[-p]) %>% 
      left_join(z)
      a <- filter(a, id_char == id) %>% 
         select(c("col.obj", "var"))
      return(a)
      }
   get.ind.var <- function(id) {
      a <- ex.ind.dat(sup.gen.dat, row.gen.dat, ind.gen.sup, 
                          row.stack.d, zero.rows.r,
                          id)
      b <- make.var.row.dat(sup.gen.dat, row.gen.dat) %>% 
         select(c("var", "std", "col.obj")) %>% 
         group_by(col.obj) %>% 
         summarize(m.var =  median(var)) %>% 
         right_join(a)
      return(b)
      }
   #l.id <- ex.ind.dat(sup.lab.dat, row.lab.dat, ind.lab.sup, 
    #                   col.stack.d, zero.rows.c,
     #                  id.num)
   #var.l.m <- make.var.row.dat(sup.lab.dat, row.lab.dat) %>% 
    #  select(c("var", "std", "col.obj")) %>% 
     # group_by(col.obj) %>% 
      #summarize(m.var =  median(var)) %>% 
      #right_join(l.id)
   make.ind.var.plot <- function(w) {
      p <- ggplot(data = w, aes(y = reorder(col.obj, var), 
                                x = var, color = col.obj, group = col.obj))
      p <- p + geom_point(stat = "identity", size = 8)
      p <- p + geom_point(aes(x = m.var),
                          stat = "identity", size = 6, shape = 3,
                          color = "red")
      p <- p + scale_color_manual(values = cols)
      p <- p + guides(color = "none")
      p <- p + theme_ridges() + labs(y = "", x = "")
      p <- p + theme(axis.text = element_text(size = 18))
      p
      } 
   png(file = here("Plots", "genre-var-id_ex1.png"), width=w, height=h)
   make.ind.var.plot(get.ind.var("id_65"))
   dev.off()
   png(file = here("Plots", "data-ex-rbb-id2.png"), width=w, height=h)
   make.aff.plot(row.bb[["id_2"]])
   dev.off()
   png(file = here("Plots", "genre-var-id_ex-id2.png"), width=w, height=h)
   make.ind.var.plot(get.ind.var("id_2"))
   dev.off()
```

```{r Demographic Data}
      source(here("demog.dat.R"))
      demog.dat <- demog.dat() 
      demog.dat <- bind_cols(tibble(id_char = paste("id", sapply(demog.dat[, 1], as.character), sep = "_")), demog.dat)
      head(demog.dat) 
      row.gen.dat.id <- cbind(row.gen.dat, id_char = row.stack.d$id[-zero.rows.r])
      row.lab.dat.id <- cbind(row.lab.dat, id_char = col.stack.d$id[-zero.rows.c])
   make.demog.dat <- function(w, g, d) {
      a <- select(demog.dat, c("id_char", d))
      b <- filter(w, col.obj == g) %>% 
         left_join(a) 
      return(b)
      }
```

```{r Demographic Cloud-Specific Plots}
   source(here("make.demog.plot.R"))
   w <- 900
   h <- 800
   # Education
   png(file = here("Plots", "demog-classical-educ.png"), width=w, height=h)
   make.demog.plot(make.demog.dat(row.gen.dat.id, "Classical", "educ.f"), 
                    "Classical", "educ.f", r = 3)
   dev.off()
   png(file = here("Plots", "demog-jazz-educ.png"), width=w, height=h)
   make.demog.plot(make.demog.dat(row.gen.dat.id, "Jazz", "educ.f"), 
                    "Jazz", "educ.f", r = 3)
   dev.off()
   png(file = here("Plots", "demog-opera-educ.png"), width=w, height=h)
   make.demog.plot(make.demog.dat(row.gen.dat.id, "Opera", "educ.f"), 
                    "Opera", "educ.f", r = 3)
   dev.off()  
   
   # Race
   png(file = here("Plots", "demog-rap-race.png"), width=w, height=h)
   make.demog.plot(make.demog.dat(row.gen.dat.id, "Rap", "race"), 
                    "Rap", "race", r = 3)
   dev.off()
   png(file = here("Plots", "demog-jazz-race.png"), width=w, height=h)
   make.demog.plot(make.demog.dat(row.gen.dat.id, "Jazz", "race"), 
                    "Jazz", "race", r = 3)
   dev.off()
   png(file = here("Plots", "demog-folk-race.png"), width=w, height=h)
   make.demog.plot(make.demog.dat(row.gen.dat.id, "Folk", "race"), 
                    "Folk", "race", r = 3, b = 3)
   dev.off() 
   
   # Age
   png(file = here("Plots", "demog-rap-age.png"), width=w, height=h)
   make.demog.plot(make.demog.dat(row.gen.dat.id, "Rap", "age"), 
                    "Rap", "age", r = 3)   
   dev.off()
   png(file = here("Plots", "demog-metal-age.png"), width=w, height=h)
   make.demog.plot(make.demog.dat(row.gen.dat.id, "Metal", "age"), 
                    "Metal", "age", r = 3)   
   dev.off()
   png(file = here("Plots", "demog-altrock-age.png"), width=w, height=h)
   make.demog.plot(make.demog.dat(row.gen.dat.id, "Alt_Rock", "age"), 
                    "Alt_Rock", "age", r = 3)   
   dev.off()
   
   # Class
   png(file = here("Plots", "demog-lower-subjclass.png"), width=w, height=h)
   make.demog.plot(make.demog.dat(row.lab.dat.id, "Lower_Class", "subjclass"), 
                    "Lower_Class", "subjclass", r = 3)   
   dev.off()
   png(file = here("Plots", "demog-working-subjclass.png"), width=w, height=h)
   make.demog.plot(make.demog.dat(row.lab.dat.id, "Working_Class", "subjclass"), 
                    "Working_Class", "subjclass", r = 3)   
   dev.off()
   png(file = here("Plots", "demog-middle-subjclass.png"), width=w, height=h)
   make.demog.plot(make.demog.dat(row.lab.dat.id, "Middle_Class", "subjclass"), 
                    "Middle_Class", "subjclass", r = 3)   
   dev.off()
   png(file = here("Plots", "demog-upper-subjclass.png"), width=w, height=h)
   make.demog.plot(make.demog.dat(row.lab.dat.id, "Upper_Class", "subjclass"), 
                    "Upper_Class", "subjclass", r = 3)   
   dev.off()
   
   
   # Education
   png(file = here("Plots", "demog-college-educ.png"), width=w, height=h)
   make.demog.plot(make.demog.dat(row.lab.dat.id, "College", "educ.f"), 
                    "College", "educ.f", r = 3)   
   dev.off()
   png(file = here("Plots", "demog-nocollege-educ.png"), width=w, height=h)
   make.demog.plot(make.demog.dat(row.lab.dat.id, "No_College", "educ.f"), 
                    "No_College", "educ.f", r = 3)   
   dev.off()
```

```{r Demographic Specific Cloud Variance Plots}
   h <- 700
   w <- 700
   make.demog.var.dat <- function(w, g, d) {
      a <- make.demog.dat(w, g, d) 
      b <- a %>% 
         group_by_at(8) %>% 
         summarize(across(1:3, mean)) %>% 
         rename(Prot.1 = Dim.1, Prot.2 = Dim.2, Prot.3 = Dim.3) %>% 
         right_join(a) %>% 
         mutate(dist.cent.1 = (Dim.1 - Prot.1)^2) %>% 
         mutate(dist.cent.2 = (Dim.2 - Prot.2)^2) %>% 
         mutate(dist.cent.3 = (Dim.3 - Prot.3)^2) %>% 
         mutate(var = dist.cent.1 + dist.cent.2 + dist.cent.3) %>% 
         group_by_at(1) %>% 
         summarize(var = mean(var)) %>% 
         rename(col.obj = 1)
      return(b)
   }
   # Education
   png(file = here("Plots", "demog-classical-educ-var.png"), width=w, height=h)
   make.var.plot.demog(make.demog.var.dat(row.gen.dat.id, 
                                          "Classical", "educ.f"), ps = 12) 
   dev.off()
   png(file = here("Plots", "demog-jazz-educ-var.png"), width=w, height=h)
   make.var.plot.demog(make.demog.var.dat(row.gen.dat.id,
                                          "Jazz", "educ.f"), ps = 12) 
   dev.off()
   png(file = here("Plots", "demog-opera-educ-var.png"), width=w, height=h)
   make.var.plot.demog(make.demog.var.dat(row.gen.dat.id, 
                                          "Opera", "educ.f"), ps = 12) 
   dev.off()
   # Race
   png(file = here("Plots", "demog-jazz-race-var.png"), width=w, height=h)
   make.var.plot.demog(make.demog.var.dat(row.gen.dat.id, 
                                          "Jazz", "race"), ps = 12) 
   dev.off()
   png(file = here("Plots", "demog-rap-race-var.png"), width=w, height=h)
   make.var.plot.demog(make.demog.var.dat(row.gen.dat.id, 
                                          "Rap", "race"), ps = 12) 
   dev.off()
   png(file = here("Plots", "demog-folk-race-var.png"), width=w, height=h)
   make.var.plot.demog(make.demog.var.dat(row.gen.dat.id, 
                                          "Folk", "race"), ps = 12) 
   dev.off()
   # Age
   png(file = here("Plots", "demog-metal-age-var.png"), width=w, height=h)
   make.var.plot.demog(make.demog.var.dat(row.gen.dat.id, 
                                          "Metal", "age"), ps = 12) 
   dev.off()
   png(file = here("Plots", "demog-rap-age-var.png"), width=w, height=h)
   make.var.plot.demog(make.demog.var.dat(row.gen.dat.id, 
                                          "Rap", "age"), ps = 12) 
   dev.off()
   png(file = here("Plots", "demog-altrock-age-var.png"), width=w, height=h)
   make.var.plot.demog(make.demog.var.dat(row.gen.dat.id, 
                                          "Alt_Rock", "age"), ps = 12) 
   dev.off()
   # Class
   png(file = here("Plots", "demog-lower-subjclass-var.png"), width=w, height=h)
   make.var.plot.demog(make.demog.var.dat(row.lab.dat.id, 
                                          "Lower_Class", "subjclass"), ps = 12) 
   dev.off()
   png(file = here("Plots", "demog-working-subjclass-var.png"), width=w, height=h)
   make.var.plot.demog(make.demog.var.dat(row.lab.dat.id, 
                                          "Working_Class", "subjclass"), ps = 12) 
   dev.off()
   png(file = here("Plots", "demog-middle-subjclass-var.png"), width=w, height=h)
   make.var.plot.demog(make.demog.var.dat(row.lab.dat.id, 
                                          "Middle_Class", "subjclass"), ps = 12) 
   dev.off()
   png(file = here("Plots", "demog-upper-subjclass-var.png"), width=w, height=h)
   make.var.plot.demog(make.demog.var.dat(row.lab.dat.id, 
                                          "Upper_Class", "subjclass"), ps = 12) 
   dev.off()
   
   # Education
   png(file = here("Plots", "demog-college-educ-var.png"), width=w, height=h)
   make.var.plot.demog(make.demog.var.dat(row.lab.dat.id, 
                                          "College", "educ.f"), ps = 12) 
   dev.off()
   png(file = here("Plots", "demog-nocollege-educ-var.png"), width=w, height=h)
   make.var.plot.demog(make.demog.var.dat(row.lab.dat.id, 
                                          "No_College", "educ.f"), ps = 12) 
   dev.off()
```









